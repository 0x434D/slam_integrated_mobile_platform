%% Simulate GNSS Trajectory in Scanner System with Lever Arm Offset and Scanner Orientation
% -------------------------------------------------------------------------
% Input:        traj_scan        -   Scanner Trajectory with Orientation (variable type table or matrix)
%               leverArm         -   Lever Arm between Scanner and GNSS Antenna in Scanner Coordinate System (1x3 or 3x1 matrix) 
%               additionalRot    -   3x3 Rotation Matrix  for additional Quaternion Rotation
%               dir              -   just for testing
% Output:       traj_GNSS        -   GNSS Antenna Trajectory in Scanner Coordinate System (output variable typ matching traj_input type)
% -------------------------------------------------------------------------
% Authors:     SIMP-Project Team
% -------------------------------------------------------------------------
% Last Modified:   05.12.2021

function [] = writeCZML(time,lat,lon,alt, filePath)
[epochYear, epochMonth, epochDay] = ymd(datetime(time(1)/24/3600,'ConvertFrom','datenum'));
[epochHour, epochMinute, epochSecond] = hms(datetime(time(1)/24/3600,'ConvertFrom','datenum'));
[endYear, endMonth, endDay] = ymd(datetime(time(end)/24/3600,'ConvertFrom','datenum'));
[endHour, endMinute, endSecond] = hms(datetime(time(end)/24/3600,'ConvertFrom','datenum'));

path = [round([0; cumsum(diff(time))]), lon, lat, alt]';

if isfile(filePath)
    delete(filePath)
end

fID = fopen(filePath,'w+');
fprintf(fID, ['[{"id":"document","version":"1.0"},'...
                '{"id":'...
                    '"SIMP Vehicle",'...
                '"availability":'...
                    '"%d-%02d-%02dT%02d:%02d:%02dZ/%d-%02d-%02dT%02d:%02d:%02fZ",'...
                '"label":{'...
                    '"fillColor":[{"rgba":[255,0,0,255]}],'...
                    '"font":"bold 20pt Segoe UI Semibold",'...
                    '"horizontalOrigin":"CENTER",'...
                    '"outlineColor":{"rgba":[0,0,0,255]},'...
                    '"pixelOffset":{"cartesian2":[0.0,20.0]},'...
                    '"scale":1.0,'...
                    '"show":[{"boolean":true}],'...
                    '"style":"FILL",'...
                    '"text":"SIMP Vehicle",'...
                    '"verticalOrigin":"CENTER"},'...
                '"model":{'...
                    '"gltf":"simpModel.glb",'...
                    '"scale": 7,'...
                    '"minimumPixelSize":250,'...
                    '"maximumScale":40},'...
                '"orientation" : {'...
                    '"velocityReference": "#position"},'...
                '"viewFrom": '...
                    '{"cartesian": [ -50, -50, 20 ]},'...
                '"path":{'...
                    '"material":{"solidColor":{"color":{"rgba":[255,0,0,255]}}},'...
                    '"width":[{"number":5.0}],'...
                    '"show":[{"boolean":true}]},'...
                '"position":{'...
                     '"interpolationAlgorithm":"LAGRANGE",'...
                     '"interpolationDegree":1,'...
                     '"epoch":'],epochYear,epochMonth,epochDay,epochHour,epochMinute,floor(epochSecond),endYear,endMonth,endDay,endHour,endMinute,endSecond);
fprintf(fID,'"%d-%02d-%02dT%02d:%02d:%02dZ",',epochYear,epochMonth,epochDay,epochHour,epochMinute,floor(epochSecond));
fprintf(fID,'"cartographicDegrees":[\n');
fprintf(fID,'%.1f,%f,%f,%f,\n',path(:,1:end-1));
fprintf(fID,'%.1f,%f,%f,%f\n',path(:,end));
fprintf(fID,']}}]');
fclose(fID);
end
